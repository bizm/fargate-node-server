---
AWSTemplateFormatVersion: 2010-09-09
Description: "Cloudformation test for node-server demo app"

Resources:

  PublicLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Scheme: internet-facing
      LoadBalancerAttributes:
      - Key: idle_timeout.timeout_seconds
        Value: '30'
      Subnets:
        - subnet-4291ad0f
        - subnet-2a01f340
        - subnet-b26a42cf
      SecurityGroups:
        - sg-c85ce6a9

  TargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      VpcId: vpc-440e042f
      Protocol: HTTP
      Port: 8080
      TargetType: ip
      Name: node-server-alb
      HealthCheckIntervalSeconds: 6
      HealthCheckPath: /
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 5
      UnhealthyThresholdCount: 2

  ListenerHTTP:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - TargetGroupArn: !Ref TargetGroup
          Type: forward
      LoadBalancerArn: !Ref PublicLoadBalancer
      Port: 8080
      Protocol: HTTP

  # somehow it always fails to delete cluster because of service being active
  Cluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: node-server-cluster
      Tags:
        - Key: Name
          Value: Node server test cluster

  # task definition is created separately via 'aws ecs'

  Service:
    Type: AWS::ECS::Service
    DependsOn: ListenerHTTP
    Properties:
      ServiceName: node-server-service
      Cluster: !Ref Cluster
      TaskDefinition: !Join
        - ''
        - - 'arn:aws:ecs:'
          - !Ref "AWS::Region"
          - ':'
          - !Ref "AWS::AccountId"
          - ':task-definition/node-server:7'
      # task definition should be full ARN including revision, so that stack doesn't get stuck in CREATE_IN_PROGRESS state
      # https://aws.amazon.com/premiumsupport/knowledge-center/cloudformation-ecs-service-stabilize/
      # https://stackoverflow.com/questions/32727520/cloudformation-template-for-creating-ecs-service-stuck-in-create-in-progress
      # TaskDefinition: node-server
      DesiredCount: 1
      LaunchType: FARGATE
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          SecurityGroups:
          - sg-c85ce6a9
          Subnets:
          - subnet-4291ad0f
          - subnet-2a01f340
          - subnet-b26a42cf
      # not allowed to set load balancer after service is created
      LoadBalancers:
        - ContainerName: node
          ContainerPort: 8080
          TargetGroupArn: !Ref TargetGroup

  EcsSecurityGroupIngressFromPublic:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      Description: Ingress from public to node-server
      GroupId: sg-c85ce6a9
      IpProtocol: tcp
      FromPort: 8080
      ToPort: 8080
      CidrIp: 0.0.0.0/0
